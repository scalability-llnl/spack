name: unit tests

on:
  workflow_dispatch:
  workflow_call:

concurrency:
  group: unit_tests-${{github.ref}}-${{github.event.pull_request.number || github.run_number}}
  cancel-in-progress: true

jobs:
  # Run unit tests on MacOS
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
    - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # @v2
      with:
        fetch-depth: 0
    - uses: actions/setup-python@13ae5bb136fac2878aff31522b9efb785519f984 # @v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Python packages
      run: |
          pip install --upgrade pip six setuptools
          pip install --upgrade pytest codecov coverage[toml] pytest-xdist pytest-cov
    - name: Setup Homebrew packages
      run: |
        brew install dash fish gcc gnupg2 kcov
    - name: Run unit tests
      env:
        SPACK_TEST_SOLVER: clingo
        SPACK_TEST_PARALLEL: 4
      run: |
        git --version
        . .github/workflows/setup_git.sh
        . share/spack/setup-env.sh
        $(which spack) bootstrap disable spack-install
        $(which spack) solve zlib
        common_args=(--dist loadfile --tx '4*popen//python=./bin/spack-tmpconfig python -u ./bin/spack python' -x)
        $(which spack) unit-test --cov --cov-config=pyproject.toml "${common_args[@]}"
        coverage combine -a
        coverage xml
    - uses: codecov/codecov-action@d9f34f8cd5cb3b3eb79b3e4b5dae3a16df499a70
      with:
        flags: unittests,macos
    - name: Setup tmate session
      if: ${{ failure() }}
      uses: mxschmitt/action-tmate@v3