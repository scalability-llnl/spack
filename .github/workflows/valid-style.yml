name: style

on:
  workflow_call:
    inputs:
      with_coverage:
        required: true
        type: string

concurrency:
  group: style-${{github.ref}}-${{github.event.pull_request.number || github.run_number}}
  cancel-in-progress: true


jobs:
  # Validate that the code can be run on all the Python versions
  # supported by Spack
  validate:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # @v2
    - uses: actions/setup-python@b55428b1882923874294fa556849718a1d7f2ca5 # @v2
      with:
        python-version: '3.10'
        cache: 'pip'
    - name: Install Python Packages
      run: |
        pip install --upgrade pip
        pip install --upgrade vermin
    - name: vermin (Spack's Core)
      # Vermin's "heuristics" for files to analyze include .pyi files (why????), which will never be
      # executed by a python interpreter. Since vermin also has no way to exclude a file by glob or
      # by an annotation within the file, and its --exclude option can't differentiate between .pyi
      # and .py sources, we are temporarily renaming all .pyi files to allow vermin to succeed.
      # This should *really* be supported upstream.
      run: |
        find lib/spack/spack -name '*.pyi' -type f > pyi-files.txt
        cat pyi-files.txt | while read -r pyi_src; do
            pyx_path="$(echo "$pyi_src" | sed -e 's#\.pyi$#.pyx#')"
            mv -v "$pyi_src" "$pyx_path"
        done
        vermin --backport argparse --violations --backport typing -t=2.7- -t=3.6- -vvv lib/spack/spack/ lib/spack/llnl/ bin/
        cat pyi-files.txt | while read -r pyi_src; do
            pyx_path="$(echo "$pyi_src" | sed -e 's#\.pyi$#.pyx#')"
            mv -v "$pyx_path" "$pyi_src"
        done
    - name: vermin (Repositories)
      run: vermin --backport argparse --violations --backport typing -t=2.7- -t=3.6- -vvv var/spack/repos
  # Run style checks on the files that have been changed
  style:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # @v2
      with:
        fetch-depth: 0
    - uses: actions/setup-python@b55428b1882923874294fa556849718a1d7f2ca5 # @v2
      with:
        python-version: '3.10'
        cache: 'pip'
    - name: Install Python packages
      run: |
        python3 -m pip install --upgrade pip six setuptools types-six click==8.0.2 'black==21.12b0' mypy isort clingo flake8
    - name: Setup git configuration
      run: |
        # Need this for the git tests to succeed.
        git --version
        . .github/workflows/setup_git.sh
    - name: Run style tests
      run: |
          share/spack/qa/run-style-tests
  audit:
    uses: ./.github/workflows/audit.yaml
    with:
      with_coverage: ${{ inputs.with_coverage }}
      python_version: '3.10'
