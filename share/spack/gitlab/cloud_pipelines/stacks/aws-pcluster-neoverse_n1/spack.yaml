spack:
  view: false

  definitions:
  - compiler_specs:
    - gcc
    - gettext

  - compiler_target:
    - '%gcc@7.3.1 target=aarch64'

  - optimized_configs:
    - gromacs
    # - lammps
    # - mpas-model
    - openfoam
    - palace
    # - py-devito
    - quantum-espresso
    # - wrf

  - optimized_libs:
    - mpich
    - openmpi

  specs:
  - matrix:
    - - $compiler_specs
    - - $compiler_target
  - $optimized_configs
  - $optimized_libs


  mirrors: { "mirror": "s3://spack-binaries/develop/aws-pcluster-neoverse_n1" }

  ci:
    pipeline-gen:
    - build-job:
        image: { "name": "ghcr.io/spack/pcluster-amazonlinux-2:latest", "entrypoint": [""] }
        tags: ["aarch64"]
        before_script:
        - - . "./share/spack/setup-env.sh"
          - . /etc/profile.d/modules.sh
          - spack --version
          - spack arch
        # Setup postinstall Spack as upstream installation
        - - if [[ -f /bootstrap/spack/etc/spack/packages.yaml ]]; then cp /bootstrap/spack/etc/spack/packages.yaml ./etc/spack/; fi
          - if [[ -f /bootstrap/spack/etc/spack/config.yaml ]]; then cp /bootstrap/spack/etc/spack/config.yaml ./etc/spack/; fi
          - if [[ -f /bootstrap/spack/etc/spack/modules.yaml ]]; then cp /bootstrap/spack/etc/spack/modules.yaml ./etc/spack/; fi
          - if [[ -f /bootstrap/spack/etc/spack/mirrors.yaml ]]; then cp /bootstrap/spack/etc/spack/mirrors.yaml ./etc/spack/; fi
          - if [[ -d /bootstrap/spack/opt/spack ]]; then spack config add "upstreams:postinstall:install_tree:/bootstrap/spack/opt/spack"; fi
        - - /bin/bash "${SPACK_ARTIFACTS_ROOT}/postinstall.sh" -fg
          - spack config --scope site add "packages:all:target:\"target=${SPACK_TARGET_ARCH}\""
    - signing-job:
        before_script:
          # Do not distribute Intel & ARM binaries
          - - for i in $(aws s3 ls --recursive ${SPACK_REMOTE_MIRROR_OVERRIDE}/build_cache/ | grep intel-oneapi | awk '{print $4}' | sed -e 's?^.*build_cache/??g'); do aws s3 rm ${SPACK_REMOTE_MIRROR_OVERRIDE}/build_cache/$i; done
            - for i in $(aws s3 ls --recursive ${SPACK_REMOTE_MIRROR_OVERRIDE}/build_cache/ | grep armpl | awk '{print $4}' | sed -e 's?^.*build_cache/??g'); do aws s3 rm ${SPACK_REMOTE_MIRROR_OVERRIDE}/build_cache/$i; done

  cdash:
    build-group: AWS Packages
