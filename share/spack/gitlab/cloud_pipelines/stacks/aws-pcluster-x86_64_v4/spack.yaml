spack:
  view: false

  definitions:

  - optimized_configs:
    # - gromacs
    # - lammps
    # - mpas-model
    # - openfoam
    - palace target=x86_64_v4
    - palace target=x86_64_v3
    # - py-devito
    # - quantum-espresso
    # - wrf

  - optimized_libs:
    - mpich
    - openmpi

  specs:
  - $optimized_configs
  # - $optimized_libs

  ci:
    pipeline-gen:
    - build-job:
        timeout: 25 minutes
        image: { "name": "ghcr.io/spack/pcluster-amazonlinux-2:v2023-07-01", "entrypoint": [""] }
        before_script:
        - - . "./share/spack/setup-env.sh"
          - . /etc/profile.d/modules.sh
          - spack --version
          - spack arch
        # Use gcc from pre-installed spack store
        - - cp share/spack/gitlab/cloud_pipelines/configs/config.yaml etc/spack/
          - /bin/bash "${SPACK_ROOT}/share/spack/gitlab/cloud_pipelines/stacks/aws-pcluster-neoverse_v1/setup-pcluster.sh"
          - rm etc/spack/config.yaml
    - signing-job:
        before_script:
          # Do not distribute Intel & ARM binaries
          - - for i in $(aws s3 ls --recursive ${SPACK_REMOTE_MIRROR_OVERRIDE}/build_cache/ | grep intel-oneapi | awk '{print $4}' | sed -e 's?^.*build_cache/??g'); do aws s3 rm ${SPACK_REMOTE_MIRROR_OVERRIDE}/build_cache/$i; done
            - for i in $(aws s3 ls --recursive ${SPACK_REMOTE_MIRROR_OVERRIDE}/build_cache/ | grep armpl | awk '{print $4}' | sed -e 's?^.*build_cache/??g'); do aws s3 rm ${SPACK_REMOTE_MIRROR_OVERRIDE}/build_cache/$i; done
  cdash:
    build-group: AWS Packages
