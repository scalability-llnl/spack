spack:
  view: false
  
  concretizer:
    reuse: false
    unify: when_possible
  
  config:
    concretizer: clingo
    install_tree:
      root: /home/software/spack
      padded_length: 512
      projections:
        all: '{architecture}/{compiler.name}-{compiler.version}/{name}-{version}-{hash}'
  
  specs:
    - hpctoolkit +mpi +cuda +rocm +level_zero +gtpin +opencl +viewer

  mirrors: { "mirror": "s3://spack-binaries/develop/hpctoolkit" }

  gitlab-ci:
    script:
      - . "./share/spack/setup-env.sh"
      - spack --version
      - cd ${SPACK_CONCRETE_ENV_DIR}
      - spack env activate --without-view .
      - spack config add "config:install_tree:projections:${SPACK_JOB_SPEC_PKG_NAME}:'morepadding/{architecture}/{compiler.name}-{compiler.version}/{name}-{version}-{hash}'"
      - if [[ -r /mnt/key/intermediate_ci_signing_key.gpg ]]; then spack gpg trust /mnt/key/intermediate_ci_signing_key.gpg; fi
      - if [[ -r /mnt/key/spack_public_key.gpg ]]; then spack gpg trust /mnt/key/spack_public_key.gpg; fi
      - spack -d ci rebuild
      
    mappings:
      - match: ['os=opensuse_leap15']
        runner-attributes:
          image: { "name": "ghcr.io/spack/leap15:latest", "entrypoint": [""] }
          tags: ["spack", "x86_64"]
          variables:
            CI_JOB_SIZE: "default"
      - match: ['os=ubuntu22.04']
        runner-attributes:
          image: { "name": "ghcr.io/spack/ubuntu-jammy:latest", "entrypoint": [""] }
          tags: ["spack", "x86_64"]
          variables:
            CI_JOB_SIZE: "default"

    broken-specs-url: "s3://spack-binaries/broken-specs"

    service-job-attributes:
      before_script:
        - . "./share/spack/setup-env.sh"
        - spack --version
      image: { "name": "ghcr.io/spack/ubuntu-jammy:latest", "entrypoint": [""] }
      tags: ["spack", "public", "x86_64_v4"]

    signing-job-attributes:
      image: { "name": "ghcr.io/spack/notary:latest", "entrypoint": [""] }
      tags: ["spack", "aws"]
      script:
        - aws s3 sync --exclude "*" --include "*spec.json*" ${SPACK_REMOTE_MIRROR_OVERRIDE}/build_cache /tmp
        - /sign.sh
        - aws s3 sync --exclude "*" --include "*spec.json.sig*" /tmp ${SPACK_REMOTE_MIRROR_OVERRIDE}/build_cache