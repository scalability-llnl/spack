spack:
  view: false

  concretizer:
    reuse: false
    unify: false

  config:
    concretizer: clingo
    install_tree:
      root: /home/software/spack
      padded_length: 384
      projections:
        all: '{architecture}/{compiler.name}-{compiler.version}/{name}-{version}-{hash}'
  packages:
    all:
      target: [x86_64_v4]
      variants: +cuda cuda_arch=80
    cuda:
      version: [11.7.0]
  specs:
    # Horovod
    - py-horovod

    # JAX
    - py-jax
    - py-jaxlib

    # Keras
    - py-keras
    - py-keras-applications
    - py-keras-preprocessing
    - py-keras2onnx

    # PyTorch
    - py-botorch
    - py-efficientnet-pytorch
    - py-gpytorch
    - py-kornia
    - py-pytorch-gradual-warmup-lr
    - py-pytorch-lightning
    - py-segmentation-models-pytorch
    - py-timm
    - py-torch
    - py-torch-cluster
    - py-torch-scatter
    - py-torch-sparse
    - py-torch-spline-conv
    - py-torchaudio
    - py-torchdata
    - py-torchfile
    - py-torchgeo
    - py-torchmeta
    - py-torchmetrics
    - py-torchtext
    - py-torchvision
    - py-vector-quantize-pytorch

    # scikit-learn
    - py-scikit-learn
    - py-scikit-learn-extra

    # TensorBoard
    - py-tensorboard
    - py-tensorboard-data-server
    - py-tensorboard-plugin-wit
    - py-tensorboardx

    # TensorFlow
    - py-tensorflow
    - py-tensorflow-hub
    - py-tensorflow-probability

    # XGBoost
    - py-xgboost
    - xgboost

  mirrors: { "mirror": "s3://spack-binaries/develop/ml" }

  gitlab-ci:
    script:
      - . "./share/spack/setup-env.sh"
      - spack --version
      - cd ${SPACK_CONCRETE_ENV_DIR}
      - spack env activate --without-view .
      - spack config add "config:install_tree:projections:${SPACK_JOB_SPEC_PKG_NAME}:'morepadding/{architecture}/{compiler.name}-{compiler.version}/{name}-{version}-{hash}'"
      - mkdir -p ${SPACK_ARTIFACTS_ROOT}/user_data
      - if [[ -r /mnt/key/intermediate_ci_signing_key.gpg ]]; then spack gpg trust /mnt/key/intermediate_ci_signing_key.gpg; fi
      - if [[ -r /mnt/key/spack_public_key.gpg ]]; then spack gpg trust /mnt/key/spack_public_key.gpg; fi
      - spack -d ci rebuild > >(tee ${SPACK_ARTIFACTS_ROOT}/user_data/pipeline_out.txt) 2> >(tee ${SPACK_ARTIFACTS_ROOT}/user_data/pipeline_err.txt >&2)

    mappings:
      - match: ['@:']
        runner-attributes:
          image: { "name": "ghcr.io/spack/e4s-amazonlinux-2:v2022-03-21", "entrypoint": [""] }
          tags: ["spack", "public", "large", "x86_64_v4"]

    image: { "name": "ghcr.io/spack/e4s-amazonlinux-2:v2022-03-21", "entrypoint": [""] }

    broken-specs-url: "s3://spack-binaries/broken-specs"

    service-job-attributes:
      before_script:
        - . "./share/spack/setup-env.sh"
        - spack --version
      image: { "name": "ghcr.io/spack/e4s-amazonlinux-2:v2022-03-21", "entrypoint": [""] }
      tags: ["spack", "public", "x86_64_v4"]

    signing-job-attributes:
      image: { "name": "ghcr.io/spack/notary:latest", "entrypoint": [""] }
      tags: ["spack", "aws"]
      script:
        - aws s3 sync --exclude "*" --include "*spec.json*" ${SPACK_REMOTE_MIRROR_OVERRIDE}/build_cache /tmp
        - /sign.sh
        - aws s3 sync --exclude "*" --include "*spec.json.sig*" /tmp ${SPACK_REMOTE_MIRROR_OVERRIDE}/build_cache

  cdash:
    build-group: Machine Learning
    url: https://cdash.spack.io
    project: Spack Testing
    site: Cloud Gitlab Infrastructure
