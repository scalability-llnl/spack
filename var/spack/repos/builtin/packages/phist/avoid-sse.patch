commit bb27ecc296af03b174e758fa35e9ca3b96bc6756
Author: Jonas Thies <16190001+jthies@users.noreply.github.com>
Date:   Sun Jul 9 21:33:30 2023 +0200

    exit early from builtin kernels requiring SSE so that they are not compiled if it is not available
    (this broke phist compilation on ARM systems, even though we never called these kernels if SSE was disabled)

diff --git a/src/kernels/builtin/axpy_kernels_nt.c b/src/kernels/builtin/axpy_kernels_nt.c
index 64d5fbd0..f2c065ed 100644
--- a/src/kernels/builtin/axpy_kernels_nt.c
+++ b/src/kernels/builtin/axpy_kernels_nt.c
@@ -19,7 +19,9 @@
 #endif
 #include <stdint.h>
 #include <stdio.h>
+#ifdef PHIST_HAVE_SSE
 #include <emmintrin.h>
+#endif
 #include <stdlib.h>
 
 static inline _Bool is_aligned(const void *restrict pointer, size_t byte_count)
@@ -30,6 +32,10 @@ static inline _Bool is_aligned(const void *restrict pointer, size_t byte_count)
 
 void daxpy_nt_2_c(int nrows, const double *restrict alpha, const double *restrict x, double *restrict y)
 {
+#ifndef PHIST_HAVE_SSE
+  printf("%s: must not be called on platforms without SSE.", __FUNCTION__);
+  exit(1);
+#endif
   if( !is_aligned(y,16) )
   {
     printf("%s: not aligned %lx\n", __FUNCTION__, (uintptr_t)(void*)y);
@@ -59,6 +65,10 @@ void daxpy_nt_2_c(int nrows, const double *restrict alpha, const double *restric
 
 void daxpy_nt_4_c(int nrows, const double *restrict alpha, const double *restrict x, double *restrict y)
 {
+#ifndef PHIST_HAVE_SSE
+  printf("%s: must not be called on platforms without SSE.", __FUNCTION__);
+  exit(1);
+#endif
   if( !is_aligned(y,16) )
   {
     printf("%s: not aligned %lx\n", __FUNCTION__, (uintptr_t)(void*)y);
@@ -91,6 +101,10 @@ void daxpy_nt_4_c(int nrows, const double *restrict alpha, const double *restric
 
 void daxpy_nt_8_c(int nrows, const double *restrict alpha, const double *restrict x, double *restrict y)
 {
+#ifndef PHIST_HAVE_SSE
+  printf("%s: must not be called on platforms without SSE.", __FUNCTION__);
+  exit(1);
+#endif
   if( !is_aligned(y,16) )
   {
     printf("%s: not aligned %lx\n", __FUNCTION__, (uintptr_t)(void*)y);
@@ -123,6 +137,10 @@ void daxpy_nt_8_c(int nrows, const double *restrict alpha, const double *restric
 
 void daxpy_nt_strided_2_c(int nrows, const double *restrict alpha, const double *restrict x, int ldx, double *restrict y, int ldy)
 {
+#ifndef PHIST_HAVE_SSE
+  printf("%s: must not be called on platforms without SSE.", __FUNCTION__);
+  exit(1);
+#endif
   if( !is_aligned(y,16) )
   {
     printf("%s: not aligned %lx\n", __FUNCTION__, (uintptr_t)(void*)y);
@@ -145,6 +163,10 @@ void daxpy_nt_strided_2_c(int nrows, const double *restrict alpha, const double
 
 void daxpy_nt_strided_4_c(int nrows, const double *restrict alpha, const double *restrict x, int ldx, double *restrict y, int ldy)
 {
+#ifndef PHIST_HAVE_SSE
+  printf("%s: must not be called on platforms without SSE.", __FUNCTION__);
+  exit(1);
+#endif
   if( !is_aligned(y,16) || ldy % 2 != 0 )
   {
     printf("%s: not aligned %lx\n", __FUNCTION__, (uintptr_t)(void*)y);
@@ -170,6 +192,10 @@ void daxpy_nt_strided_4_c(int nrows, const double *restrict alpha, const double
 
 void daxpy_nt_strided_8_c(int nrows, const double *restrict alpha, const double *restrict x, int ldx, double *restrict y, int ldy)
 {
+#ifndef PHIST_HAVE_SSE
+  printf("%s: must not be called on platforms without SSE.", __FUNCTION__);
+  exit(1);
+#endif
   if( !is_aligned(y,16) || ldy % 2 != 0 )
   {
     printf("%s: not aligned %lx\n", __FUNCTION__, (uintptr_t)(void*)y);
@@ -195,6 +221,10 @@ void daxpy_nt_strided_8_c(int nrows, const double *restrict alpha, const double
 
 void dcopy_general_nt_c(int nrows, int nvec, const double *restrict x, int ldx, double *restrict y, int ldy)
 {
+#ifndef PHIST_HAVE_SSE
+  printf("%s: must not be called on platforms without SSE.", __FUNCTION__);
+  exit(1);
+#endif
   if( nvec % 2 != 0 )
   {
     printf("%s: not aligned %lx\n", __FUNCTION__, (uintptr_t)(void*)x);
diff --git a/src/kernels/builtin/spmvm_kernels_nt.c b/src/kernels/builtin/spmvm_kernels_nt.c
index d4d30bff..5a8db7c8 100644
--- a/src/kernels/builtin/spmvm_kernels_nt.c
+++ b/src/kernels/builtin/spmvm_kernels_nt.c
@@ -19,7 +19,9 @@
 #endif
 #include <stdint.h>
 #include <stdio.h>
+#ifdef PHIST_HAVE_SSE
 #include <emmintrin.h>
+#endif
 #include <stdlib.h>
 
 #ifdef PHIST_HIGH_PRECISION_KERNELS
@@ -35,6 +37,10 @@ static inline _Bool is_aligned(const void *restrict pointer, size_t byte_count)
 void dspmvm_nt_1_c(int nrows, double alpha, const long *restrict row_ptr, const long *restrict halo_ptr, const int *restrict col_idx, const double *restrict val,
                  const double *restrict shifts, const double *restrict rhsv, const double *restrict halo, double *restrict lhsv)
 {
+#ifndef PHIST_HAVE_SSE
+  printf("%s: must not be called on platforms without SSE.", __FUNCTION__);
+  exit(1);
+#endif
   if( !is_aligned(lhsv,16) )
   {
     printf("%s: not aligned %lx\n", __FUNCTION__, (uintptr_t)(void*)lhsv);
@@ -153,6 +159,10 @@ void dspmvm_nt_1_c(int nrows, double alpha, const long *restrict row_ptr, const
 void dspmvm_nt_2_c(int nrows, double alpha, const long *restrict row_ptr, const long *restrict halo_ptr, const int *restrict col_idx, const double *restrict val,
                  const double *restrict shifts, const double *restrict rhsv, const double *restrict halo, double *restrict lhsv, int ldl)
 {
+#ifndef PHIST_HAVE_SSE
+  printf("%s: must not be called on platforms without SSE.", __FUNCTION__);
+  exit(1);
+#endif
   if( !is_aligned(lhsv,32) || ldl % 2 != 0 )
   {
     printf("%s: not aligned %lx\n", __FUNCTION__, (uintptr_t)(void*)lhsv);
@@ -242,6 +252,10 @@ void dspmvm_nt_2_c(int nrows, double alpha, const long *restrict row_ptr, const
 void dspmvm_nt_4_c(int nrows, double alpha, const long *restrict row_ptr, const long *restrict halo_ptr, const int *restrict col_idx, const double *restrict val,
                  const double *restrict shifts, const double *restrict rhsv, const double *restrict halo, double *restrict lhsv, int ldl)
 {
+#ifndef PHIST_HAVE_SSE
+  printf("%s: must not be called on platforms without SSE.", __FUNCTION__);
+  exit(1);
+#endif
   if( !is_aligned(lhsv,32) || ldl % 4 != 0 )
   {
     printf("%s: lhsv not aligned %lx\n", __FUNCTION__, (uintptr_t)(void*)lhsv);
@@ -348,6 +362,10 @@ void dspmvm_nt_4_c(int nrows, double alpha, const long *restrict row_ptr, const
 void dspmvm_nt_8_c(int nrows, double alpha, const long *restrict row_ptr, const long *restrict halo_ptr, const int *restrict col_idx, const double *restrict val,
                  const double *restrict shifts, const double *restrict rhsv, const double *restrict halo, double *restrict lhsv, int ldl)
 {
+#ifndef PHIST_HAVE_SSE
+  printf("%s: must not be called on platforms without SSE.", __FUNCTION__);
+  exit(1);
+#endif
   if( !is_aligned(lhsv,16) || ldl % 2 != 0 )
   {
     printf("%s: not aligned %lx\n", __FUNCTION__, (uintptr_t)(void*)lhsv);
@@ -418,6 +436,10 @@ void dspmvm_nt_8_c(int nrows, double alpha, const long *restrict row_ptr, const
 void dspmvm_nt_strided_2_c(int nrows, double alpha, const long *restrict row_ptr, const long *restrict halo_ptr, const int *restrict col_idx, const double *restrict val,
                          const double *restrict shifts, const double *restrict rhsv, int ldr, const double *restrict halo, double *restrict lhsv, int ldl)
 {
+#ifndef PHIST_HAVE_SSE
+  printf("%s: must not be called on platforms without SSE.", __FUNCTION__);
+  exit(1);
+#endif
   if( !is_aligned(lhsv,16) || ldl % 2 != 0 )
   {
     printf("%s: not aligned %lx\n", __FUNCTION__, (uintptr_t)(void*)lhsv);
@@ -469,6 +491,10 @@ void dspmvm_nt_strided_2_c(int nrows, double alpha, const long *restrict row_ptr
 void dspmvm_nt_strided_4_c(int nrows, double alpha, const long *restrict row_ptr, const long *restrict halo_ptr, const int *restrict col_idx, const double *restrict val,
                          const double *restrict shifts, const double *restrict rhsv, int ldr, const double *restrict halo, double *restrict lhsv, int ldl)
 {
+#ifndef PHIST_HAVE_SSE
+  printf("%s: must not be called on platforms without SSE.", __FUNCTION__);
+  exit(1);
+#endif
   if( !is_aligned(lhsv,16) || ldl % 2 != 0 )
   {
     printf("%s: not aligned %lx\n", __FUNCTION__, (uintptr_t)(void*)lhsv);
@@ -531,6 +557,10 @@ void dspmvm_nt_strided_4_c(int nrows, double alpha, const long *restrict row_ptr
 void dspmvm_nt_strided_8_c(int nrows, double alpha, const long *restrict row_ptr, const long *restrict halo_ptr, const int *restrict col_idx, const double *restrict val,
                          const double *restrict shifts, const double *restrict rhsv, int ldr, const double *restrict halo, double *restrict lhsv, int ldl)
 {
+#ifndef PHIST_HAVE_SSE
+  printf("%s: must not be called on platforms without SSE.", __FUNCTION__);
+  exit(1);
+#endif
   if( !is_aligned(lhsv,16) || ldl % 2 != 0 )
   {
     printf("%s: not aligned %lx\n", __FUNCTION__, (uintptr_t)(void*)lhsv);
