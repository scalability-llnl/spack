t a/clients/CMakeLists.txt b/clients/CMakeLists.txt
index 8a3f805..0ec1ebd 100755
--- a/clients/CMakeLists.txt
+++ b/clients/CMakeLists.txt
@@ -123,7 +123,7 @@ if( BUILD_CLIENTS_BENCHMARKS OR BUILD_CLIENTS_TESTS)
         set( BLAS_LIBRARY /usr/local/lib/libblis.a )
       endif()
     else()
-      set( BLAS_LIBRARY "blas" )
+      set( BLAS_LIBRARY ${NETLIB_DIR}/lib64/libblas.so )
     endif()
   else() # WIN32
     set( BLAS_INCLUDE_DIR ${OPENBLAS_DIR}/include CACHE PATH "OpenBLAS library include path" )
diff --git a/clients/gtest/CMakeLists.txt b/clients/gtest/CMakeLists.txt
index 87932a2..8f482b3 100644
--- a/clients/gtest/CMakeLists.txt
+++ b/clients/gtest/CMakeLists.txt
@@ -160,6 +160,8 @@ target_include_directories( rocblas-test
     $<BUILD_INTERFACE:${BLAS_INCLUDE_DIR}>
     $<BUILD_INTERFACE:${BLIS_INCLUDE_DIR}> # may be blank if not used
     $<BUILD_INTERFACE:${GTEST_INCLUDE_DIRS}>
+    $<BUILD_INTERFACE:${ROCM_OPENMP_EXTRAS_DIR}/include>
+    $<BUILD_INTERFACE:${NETLIB_DIR}/include>
 )
 target_include_directories( rocblas_v3-test
   SYSTEM PRIVATE
@@ -167,14 +169,16 @@ target_include_directories( rocblas_v3-test
     $<BUILD_INTERFACE:${BLAS_INCLUDE_DIR}>
     $<BUILD_INTERFACE:${BLIS_INCLUDE_DIR}> # may be blank if not used
     $<BUILD_INTERFACE:${GTEST_INCLUDE_DIRS}>
+    $<BUILD_INTERFACE:${ROCM_OPENMP_EXTRAS_DIR}/include>
+    $<BUILD_INTERFACE:${NETLIB_DIR}/include>
 )

 if( BUILD_FORTRAN_CLIENTS )
   target_link_libraries( rocblas-test PRIVATE rocblas_fortran_client )
   target_link_libraries( rocblas_v3-test PRIVATE rocblas_fortran_client )
 endif( )
-target_link_libraries( rocblas-test PRIVATE ${BLAS_LIBRARY} ${GTEST_BOTH_LIBRARIES} roc::rocblas )
-target_link_libraries( rocblas_v3-test PRIVATE ${BLAS_LIBRARY} ${GTEST_BOTH_LIBRARIES} roc::rocblas )
+target_link_libraries( rocblas-test PRIVATE ${BLAS_LIBRARY} ${NETLIB_DIR}/lib64/libcblas.so ${GTEST_BOTH_LIBRARIES} roc::rocblas )
+target_link_libraries( rocblas_v3-test PRIVATE ${BLAS_LIBRARY} ${NETLIB_DIR}/lib64/libcblas.so ${GTEST_BOTH_LIBRARIES} roc::rocblas )

 if( CUDA_FOUND )
   target_include_directories( rocblas-test

