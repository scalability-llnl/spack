diff --git a/src/hamiltonian/hamiltonian.cpp b/src/hamiltonian/hamiltonian.cpp
index 54a91df..ea66ecf 100644
--- a/src/hamiltonian/hamiltonian.cpp
+++ b/src/hamiltonian/hamiltonian.cpp
@@ -74,7 +74,7 @@ Hamiltonian0<T>::Hamiltonian0(Potential& potential__, bool precompute_lapw__)
                     for (int j1 = 0; j1 <= j2; j1++) {
                         int lm1    = type.indexb(j1).lm;
                         int idxrf1 = type.indexb(j1).idxrf;
-                        hmt_[ia](j1, j2) = atom.radial_integrals_sum_L3<spin_block_t::nm>(idxrf1, idxrf2,
+                        hmt_[ia](j1, j2) = atom.template radial_integrals_sum_L3<spin_block_t::nm>(idxrf1, idxrf2,
                                                                                 type.gaunt_coefs().gaunt_vector(lm1, lm2));
                         hmt_[ia](j2, j1) = std::conj(hmt_[ia](j1, j2));
                     }
diff -Nur SIRIUS-7.3.2/src/k_point/k_point_set.cpp SIRIUS-7.3.2-src/src/k_point/k_point_set.cpp
--- SIRIUS-7.3.2/src/k_point/k_point_set.cpp	2022-07-05 16:19:54.000000000 +0900
+++ SIRIUS-7.3.2-src/src/k_point/k_point_set.cpp	2023-09-22 18:28:23.000000000 +0900
@@ -317,7 +317,7 @@
     splindex<splindex_t::block> splb(ctx_.num_bands(), ctx_.comm_band().size(), ctx_.comm_band().rank());
 
     /* computes N(ef; f) = \sum_{i,k} f(ef - e_{k,i}) */
-    auto compute_ne = [&](double ef, auto&& f) {
+    auto compute_ne = [&](double ef, std::function<double(double)> f) {
         double ne{0};
         for (int ikloc = 0; ikloc < spl_num_kpoints_.local_size(); ikloc++) {
             int ik = spl_num_kpoints_[ikloc];
